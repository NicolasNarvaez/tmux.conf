#$global
# $ syntax defines subdocument tags that generate.js can split-interpolate
# 0 is too far from ` ;)
set -g base-index 1

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

#set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi
setw -g mouse on
setw -g monitor-activity on

# THEME
set -g status-bg colour1
set -g status-fg white
set -g window-status-current-bg white
set -g window-status-current-fg black
set -g window-status-current-attr bold
set -g status-interval 60
set -g status-left-length 30
set -g status-left '#[fg=green](#S) #(whoami)'
set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'

#vim compat.:

#sends correctyl ctrl-arrow
set-window-option -g xterm-keys on

#and in your ~/.vimrc
#if &term =~ '^screen'
#    " tmux will send xterm-style keys when its xterm-keys option is on
#    execute "set <xUp>=\e[1;*A"
#    execute "set <xDown>=\e[1;*B"
#    execute "set <xRight>=\e[1;*C"
#    execute "set <xLeft>=\e[1;*D"
#endif

# No delay for escape key press
set -sg escape-time 0

#bind = alias(bind-key) => they are equal
#bin = bind , because shorter string matching uniquely a command equals command
#for multiple comands on keybind: comand \; command
#for multiline commands: command \; \
#						 command

#nest management
bind -n M-F11 set -g status-bg colour1
bind -n M-F12 set -g status-bg black

#$nest-bind-default
C-b
#$nest-bind-altern
C-n

#$nest-bind
S-down

#$nest-bind-setup
send-keys M-F12
set -g status-bg colour1

#$unnest-bind
S-up

#$unnest-bind-setup
send-keys M-F11
set -g status-bg black

#$nest
#nested specific binds
#sesion management
bind-key q kill-session
bind-key Q confirm-before kill-server

# Reload tmux config
bind r source-file ~/.tmux.conf

#set default terminator split binds
#-c '#{pane_current_path}' binds to current $PWD
bind-key -n C-e split-window -h -c '#{pane_current_path}'
bind-key -n C-o split-window -v -c '#{pane_current_path}'

bind-key -n M-j resize-pane -D
bind-key -n M-k resize-pane -U
bind-key -n M-h resize-pane -L
bind-key -n M-l resize-pane -R

bind-key -n S-M-down resize-pane -D 8
bind-key -n S-M-up resize-pane -U 8
bind-key -n S-M-left resize-pane -L 8
bind-key -n S-M-right resize-pane -R 8

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

#history
bind -n C-ppage copy-mode

#window management
#-a [index=this_window] -> put after index window
bind -n C-down new-window -a  -c '#{pane_current_path}'
#swap windows
bind -n C-S-left swap-window -t -1
bind -n C-S-right swap-window -t +1
# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

#vim copy mode style
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'r' rectangle-toggle

#copy to sys clipboard:
# i dont know wy, but it works over ssh on vim.
#taken from here: http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting-ubuntu/
#first install  xclip -> sudo apt install --assume-yes xclip
bind -t vi-copy y copy-pipe "xclip -sel clip -i"
